name: Build and Deploy to GitHub Container Registry

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VERSION: ${{ vars.VERSION }}

jobs:
  build-and-push:
    name: Build and Push to GitHub Container Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: Set build tags
        id: tags
        run: |
          if [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "TAGS=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-stg,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-stg,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_OUTPUT
          else
            echo "TAGS=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: devops/Dockerfile.prod
          push: true
          tags: ${{ steps.tags.outputs.TAGS }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Log deployment
        run: |
          echo "Successfully pushed image to GitHub Container Registry with tags:"
          if [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "  - ${{ env.VERSION }}-stg"
            echo "  - latest-stg"
          else
            echo "  - ${{ env.VERSION }}"
            echo "  - latest"
          fi
          echo "  - ${{ github.sha }}"

